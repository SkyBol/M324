name: Deploy to Docker Swarm

on:
  push:
    branches:
      - develop-AUB-41

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AUB_PRIVATE_KEY }}" > ~/.ssh/github_actions_key
          chmod 600 ~/.ssh/github_actions_key

      - name: Copy SQL files to EC2
        run: |
          echo "Creating app directory on EC2"
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/github_actions_key ec2-user@98.81.234.83 "mkdir -p /home/ec2-user/app"
          echo "Copying album.sql to 98.81.234.83"
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/github_actions_key aws/album.sql ec2-user@98.81.234.83:/home/ec2-user/app/
          echo "Copying band.sql to 98.81.234.83"
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/github_actions_key aws/band.sql ec2-user@98.81.234.83:/home/ec2-user/app/

      - name: Copy Docker Compose file to EC2
        run: |
          echo "Copying docker-compose.yml to 98.81.234.83"
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/github_actions_key aws/swarm/docker-compose.yaml ec2-user@98.81.234.83:/home/ec2-user/app/

      - name: Deploy to Docker Swarm
        run: |
          echo "Deploying to Docker Swarm on 98.81.234.83"
          ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i ~/.ssh/github_actions_key ec2-user@98.81.234.83 << 'EOF'
            docker stack deploy --compose-file /home/ec2-user/app/docker-compose.yaml my-app
          EOF
  run-tests:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'zulu'

      - name: Set up Gradle
        uses: gradle/wrapper-validation-action@v1

      - name: Build and run unit tests for album-service
        run: |
          cd album-management  # Wechsle in das Album-Projektverzeichnis
          ./gradlew clean test  # F端hre Unit-Tests f端r Album-Service aus

      - name: Build and run unit tests for band-service
        run: |
          cd band-management  # Wechsle in das Band-Projektverzeichnis
          ./gradlew clean test  # F端hre Unit-Tests f端r Band-Service aus

